<Page x:Class="Sample.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Converters="using:Template10.Converters"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Sample.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:Sample.ViewModels" x:Name="ThisPage"
      Background="White" RequestedTheme="Light"
      mc:Ignorable="d">

    <Page.Resources>

        <Converters:StringFormatConverter x:Key="DateTimeFormatConverter" />
        <c:ValueWhenConverter xmlns:c="using:Template10.Converters" x:Name="VisibleWhenFalseConverter">
            <c:ValueWhenConverter.When>
                <x:Boolean>False</x:Boolean>
            </c:ValueWhenConverter.When>
            <c:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </c:ValueWhenConverter.Value>
            <c:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </c:ValueWhenConverter.Otherwise>
        </c:ValueWhenConverter>

        <DataTemplate x:Name="MessageListItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="SteelBlue" Visibility="{Binding IsRead, Converter={StaticResource VisibleWhenFalseConverter}}" />
                <StackPanel Grid.Column="1">
                    <TextBlock x:Name="From" Margin="8,0,0,0"
                               FontSize="16" FontWeight="Normal"
                               Foreground="Black" MaxLines="1"
                               Text="{Binding From, FallbackValue=From}" />
                    <TextBlock x:Name="Subject" Margin="8,0,0,0"
                               FontSize="12" FontWeight="Normal"
                               Foreground="{StaticResource CustomColorBrush}" MaxLines="1"
                               Text="{Binding Subject}" />
                    <TextBlock x:Name="Body" Margin="8,0,0,8"
                               FontSize="12" FontWeight="Normal"
                               Foreground="DimGray" MaxLines="1"
                               Style="{StaticResource TitleTextBlockStyle}"
                               Text="{Binding Body, FallbackValue=Body}" />
                </StackPanel>
                <TextBlock x:Name="Date" Grid.Column="2"
                           Margin="8,0,16,8" HorizontalAlignment="Right"
                           VerticalAlignment="Bottom" FontSize="12"
                           FontWeight="Light" Foreground="DimGray"
                           Text="{Binding Date, FallbackValue=Date, Converter={StaticResource DateTimeFormatConverter}}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Name="MessageDetailTemplate">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <RelativePanel Padding="16">
                    <Ellipse x:Name="Ellipse" Width="50"
                             Height="50" Margin="0,0,16,0"
                             Fill="Gainsboro" />
                    <TextBlock x:Name="From" FontSize="20"
                               FontWeight="Normal" Foreground="Black"
                               MaxLines="1" RelativePanel.AlignTopWith="Ellipse"
                               RelativePanel.RightOf="Ellipse"
                               Text="{Binding From, FallbackValue=From}" />
                    <TextBlock x:Name="To" FontSize="12"
                               FontWeight="Normal" Foreground="Black"
                               MaxLines="1" RelativePanel.AlignLeftWith="Ellipse"
                               RelativePanel.Below="Subject">
                        <Run Text="To: " />
                        <Run Foreground="DimGray" Text="{Binding To, FallbackValue=To}" />
                    </TextBlock>
                    <TextBlock x:Name="Subject" Margin="0,8,0,0"
                               FontSize="16" FontWeight="Bold"
                               Foreground="Black" MaxLines="1"
                               RelativePanel.AlignLeftWith="Ellipse"
                               RelativePanel.Below="Ellipse" Text="{Binding Subject}"
                               TextWrapping="WrapWholeWords" />
                    <TextBlock x:Name="Body" Margin="0,16,16,16"
                               FontSize="12" FontWeight="Normal"
                               Foreground="DimGray" RelativePanel.AlignLeftWith="Ellipse"
                               RelativePanel.Below="To"
                               Style="{StaticResource TitleTextBlockStyle}"
                               Text="{Binding Body, FallbackValue=Body}" />
                    <TextBlock x:Name="Date" Grid.Column="2"
                               HorizontalAlignment="Right" VerticalAlignment="Bottom"
                               FontSize="12" FontWeight="Light"
                               Foreground="DimGray" RelativePanel.Below="From"
                               RelativePanel.RightOf="Ellipse"
                               Text="{Binding Date, FallbackValue=Date}" />
                </RelativePanel>
            </ScrollViewer>
        </DataTemplate>

        <Style x:Name="MessageListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="White" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Padding" Value="0,4,0,0" />
        </Style>

    </Page.Resources>

    <Page.DataContext>
        <vm:MainPageViewModel />
    </Page.DataContext>

    <Grid x:Name="RootGrid">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WhenNarrowVisualStateGroup">
                <VisualState x:Name="NarrowMasterOpen">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NarrowMaster.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="NarrowDetail.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="DeleteButton.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="BackButton.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="SearchArea.(UIElement.Visibility)" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowDetailOpen">
                    <VisualState.Setters>
                        <Setter Target="NarrowMaster.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="NarrowDetail.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="DeleteButton.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="BackButton.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="SearchArea.(UIElement.Visibility)" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="WhenNormalVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NarrowContent.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="NormalContent.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="PageHeaderText.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="DeleteButton.(UIElement.Visibility)" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchArea.Width" Value="320" />
                        <Setter Target="LeftColumn.Width" Value="320" />
                        <Setter Target="DeleteButton.(UIElement.Visibility)" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchArea.Width" Value="520" />
                        <Setter Target="LeftColumn.Width" Value="520" />
                        <Setter Target="DeleteButton.(UIElement.Visibility)" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <CommandBar>
            <AppBarButton x:Name="DeleteButton" Command="{Binding DeleteCommand}"
                          Icon="Delete" Label="Delete">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Click">
                        <Core:GoToStateAction StateName="NarrowMasterOpen" TargetObject="{Binding ElementName=ThisPage}" />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </AppBarButton>
            <CommandBar.Content>
                <StackPanel x:Name="CommandBarContent" Orientation="Horizontal">
                    <Grid x:Name="SearchArea" MinWidth="320">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="SearchTextBox" Grid.Column="0"
                                 VerticalContentAlignment="Center" BorderThickness="0"
                                 Padding="8,16,0,0" PlaceholderText="Search"
                                 Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Interactivity:Interaction.Behaviors>
                                <b:TextBoxEnterKeyBehavior xmlns:b="using:Template10.Behaviors">
                                    <Core:InvokeCommandAction Command="{Binding SearchCommand}" />
                                </b:TextBoxEnterKeyBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </TextBox>
                        <AppBarButton x:Name="SearchButton" Grid.Column="1" Command="{Binding SearchCommand}">
                            <SymbolIcon Symbol="Find" />
                        </AppBarButton>
                        <AppBarButton x:Name="ClearButton" Grid.Column="2" Command="{Binding ClearCommand}">
                            <SymbolIcon Symbol="Clear" />
                        </AppBarButton>
                    </Grid>
                    <AppBarButton x:Name="BackButton" Icon="Back" Visibility="Collapsed">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="Click">
                                <Core:GoToStateAction StateName="NarrowMasterOpen" />
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </AppBarButton>
                    <TextBlock x:Name="PageHeaderText" Margin="8,16,0,0"
                               FontWeight="Bold"
                               Text="{Binding Selected.Subject, FallbackValue=Subject}"
                               TextTrimming="CharacterEllipsis" />

                </StackPanel>
            </CommandBar.Content>
        </CommandBar>

        <Grid x:Name="NormalContent" Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftColumn" Width="Auto" MinWidth="320" />
                <ColumnDefinition x:Name="RightColumn" Width="*" />
            </Grid.ColumnDefinitions>

            <ListView x:Name="NormalMaster"
                      ItemTemplate="{StaticResource MessageListItemTemplate}"
                      ItemsSource="{Binding Messages}"
                      SelectedItem="{Binding Selected, Mode=TwoWay}">
                <x:String>Sample</x:String>
                <x:String>Sample</x:String>
                <x:String>Sample</x:String>
            </ListView>

            <ContentControl x:Name="NormalDetail" Grid.Column="1"
                            Content="{Binding Selected}"
                            ContentTemplate="{StaticResource MessageDetailTemplate}" />

        </Grid>

        <Grid x:Name="NarrowContent" Grid.Row="1" Visibility="Collapsed">

            <ListView x:Name="NarrowMaster" IsItemClickEnabled="True"
                      ItemTemplate="{StaticResource MessageListItemTemplate}"
                      ItemsSource="{Binding Messages}"
                      SelectedItem="{Binding Selected, Mode=TwoWay}">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="ItemClick">
                        <b:ConditionalAction xmlns:b="using:Template10.Behaviors" LeftValue="{Binding SelectedItem, ElementName=NarrowMaster}" Operator="IsNotNull">
                            <Core:GoToStateAction StateName="NarrowDetailOpen" TargetObject="{Binding ElementName=ThisPage}" />
                        </b:ConditionalAction>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
                <x:String>Sample</x:String>
                <x:String>Sample</x:String>
                <x:String>Sample</x:String>
            </ListView>

            <ContentControl x:Name="NarrowDetail" Content="{Binding Selected}"
                            ContentTemplate="{StaticResource MessageDetailTemplate}"
                            Visibility="Collapsed" />

        </Grid>

    </Grid>
</Page>
